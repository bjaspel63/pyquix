[
  {"q":"How do you print 'Hello World' in Python?","a":"<code>print('Hello World')</code>","cat":"Basics","difficulty":1},
  {"q":"How do you write a single-line comment?","a":"Using <code>#</code>","cat":"Basics","difficulty":1},
  {"q":"What is the correct file extension for Python files?","a":".py","cat":"Basics","difficulty":1},
  {"q":"Which function is used to get user input?","a":"<code>input()</code>","cat":"Basics","difficulty":1},
  {"q":"Which keyword is used to define a variable?","a":"No keyword â€” just assign: <code>x = 10</code>","cat":"Basics","difficulty":1},
  {"q":"How do you check Python version?","a":"<code>python --version</code>","cat":"Basics","difficulty":1},
  {"q":"What is indentation used for?","a":"To define blocks of code","cat":"Basics","difficulty":1},
  {"q":"Which function is used to get the type of a variable?","a":"<code>type()</code>","cat":"Basics","difficulty":1},
  {"q":"How do you write multiple statements on one line?","a":"Separate with <code>;</code>","cat":"Basics","difficulty":2},
  {"q":"What is PEP 8?","a":"Python's style guide","cat":"Basics","difficulty":2},
  
  {"q":"What are the main Python data types?","a":"int, float, str, bool","cat":"Data Types","difficulty":1},
  {"q":"What does <code>type(3.14)</code> return?","a":"float","cat":"Data Types","difficulty":1},
  {"q":"What does <code>bool(0)</code> return?","a":"False","cat":"Data Types","difficulty":1},
  {"q":"What does <code>bool(5)</code> return?","a":"True","cat":"Data Types","difficulty":1},
  {"q":"How do you convert a string to an integer?","a":"<code>int('42')</code>","cat":"Data Types","difficulty":2},
  {"q":"What does <code>float('3.5')</code> return?","a":"3.5","cat":"Data Types","difficulty":2},
  {"q":"What is the result of <code>5 // 2</code>?","a":"2 (floor division)","cat":"Data Types","difficulty":2},
  {"q":"What is the result of <code>5 % 2</code>?","a":"1","cat":"Data Types","difficulty":2},
  {"q":"What is <code>None</code> in Python?","a":"Represents no value (null)","cat":"Data Types","difficulty":2},
  {"q":"How do you check variable type quickly?","a":"Using <code>isinstance()</code>","cat":"Data Types","difficulty":3},

  {"q":"How do you concatenate strings?","a":"Using <code>+</code>","cat":"Strings","difficulty":1},
  {"q":"How do you repeat a string 3 times?","a":"<code>'hi' * 3</code>","cat":"Strings","difficulty":1},
  {"q":"How do you get the length of a string?","a":"<code>len('hello')</code>","cat":"Strings","difficulty":1},
  {"q":"How do you access the first character of 'hello'?","a":"<code>'hello'[0]</code>","cat":"Strings","difficulty":1},
  {"q":"How do you slice 'hello' to 'he'?","a":"<code>'hello'[:2]</code>","cat":"Strings","difficulty":2},
  {"q":"What does <code>'HELLO'.lower()</code> return?","a":"hello","cat":"Strings","difficulty":1},
  {"q":"What does <code>'hello'.upper()</code> return?","a":"HELLO","cat":"Strings","difficulty":1},
  {"q":"How do you replace 'h' with 'j' in 'hello'?","a":"<code>'hello'.replace('h','j')</code>","cat":"Strings","difficulty":2},
  {"q":"How do you check if 'py' in 'python'?","a":"<code>'py' in 'python'</code>","cat":"Strings","difficulty":2},
  {"q":"How do you remove spaces from both ends?","a":"<code>strip()</code>","cat":"Strings","difficulty":2},

  {"q":"How do you create a list?","a":"<code>mylist = [1,2,3]</code>","cat":"Lists","difficulty":1},
  {"q":"How do you access the last element?","a":"<code>mylist[-1]</code>","cat":"Lists","difficulty":1},
  {"q":"How do you add an item to a list?","a":"<code>append()</code>","cat":"Lists","difficulty":1},
  {"q":"How do you insert at index 1?","a":"<code>insert(1, item)</code>","cat":"Lists","difficulty":2},
  {"q":"How do you remove a specific value?","a":"<code>remove(value)</code>","cat":"Lists","difficulty":2},
  {"q":"How do you remove by index?","a":"<code>pop(index)</code>","cat":"Lists","difficulty":2},
  {"q":"How do you sort a list?","a":"<code>sort()</code>","cat":"Lists","difficulty":2},
  {"q":"How do you reverse a list?","a":"<code>reverse()</code>","cat":"Lists","difficulty":2},
  {"q":"How do you copy a list?","a":"<code>copy()</code>","cat":"Lists","difficulty":3},
  {"q":"What is list comprehension?","a":"<code>[x*2 for x in nums]</code>","cat":"Lists","difficulty":3},

  {"q":"How do you create a tuple?","a":"<code>t = (1,2,3)</code>","cat":"Tuples & Sets","difficulty":2},
  {"q":"Are tuples mutable?","a":"No, they are immutable.","cat":"Tuples & Sets","difficulty":2},
  {"q":"How do you create a set?","a":"<code>s = {1,2,3}</code>","cat":"Tuples & Sets","difficulty":2},
  {"q":"Do sets allow duplicates?","a":"No, only unique values.","cat":"Tuples & Sets","difficulty":2},
  {"q":"How do you add to a set?","a":"<code>add()</code>","cat":"Tuples & Sets","difficulty":2},
  {"q":"How do you remove from a set?","a":"<code>remove()</code> or <code>discard()</code>","cat":"Tuples & Sets","difficulty":3},
  {"q":"What does union() do?","a":"Combines sets without duplicates","cat":"Tuples & Sets","difficulty":3},
  {"q":"What does intersection() do?","a":"Keeps common elements","cat":"Tuples & Sets","difficulty":3},
  {"q":"What does difference() do?","a":"Keeps elements not in the other set","cat":"Tuples & Sets","difficulty":3},
  {"q":"How to convert list to set?","a":"<code>set([1,2,2,3])</code>","cat":"Tuples & Sets","difficulty":2},

  {"q":"How do you create a dictionary?","a":"<code>d = {'a':1, 'b':2}</code>","cat":"Dictionaries","difficulty":2},
  {"q":"How do you get a value by key?","a":"<code>d['a']</code>","cat":"Dictionaries","difficulty":2},
  {"q":"How do you add a new key:value?","a":"<code>d['c'] = 3</code>","cat":"Dictionaries","difficulty":2},
  {"q":"How do you remove a key?","a":"<code>pop(key)</code>","cat":"Dictionaries","difficulty":3},
  {"q":"How do you get all keys?","a":"<code>keys()</code>","cat":"Dictionaries","difficulty":2},
  {"q":"How do you get all values?","a":"<code>values()</code>","cat":"Dictionaries","difficulty":2},
  {"q":"How do you loop through items?","a":"<code>for k,v in d.items()</code>","cat":"Dictionaries","difficulty":3},
  {"q":"What does get() do?","a":"Safely fetch value with default","cat":"Dictionaries","difficulty":3},
  {"q":"Can dictionary keys be lists?","a":"No, must be immutable","cat":"Dictionaries","difficulty":3},
  {"q":"How to check if key exists?","a":"<code>'a' in d</code>","cat":"Dictionaries","difficulty":2},

  {"q":"How do you write an if statement?","a":"<code>if x > 0: print('Positive')</code>","cat":"Conditionals","difficulty":1},
  {"q":"How do you write if/else?","a":"<code>if x>0: ... else: ...</code>","cat":"Conditionals","difficulty":1},
  {"q":"How do you write elif?","a":"<code>if x==0: ... elif x>0: ... else: ...</code>","cat":"Conditionals","difficulty":2},
  {"q":"What does == check?","a":"Equality of values","cat":"Conditionals","difficulty":1},
  {"q":"What does is check?","a":"Object identity","cat":"Conditionals","difficulty":2},
  {"q":"What are logical operators?","a":"and, or, not","cat":"Conditionals","difficulty":1},
  {"q":"What does in check?","a":"Membership","cat":"Conditionals","difficulty":1},
  {"q":"What is a ternary operator?","a":"<code>x if cond else y</code>","cat":"Conditionals","difficulty":3},
  {"q":"What does pass do?","a":"Does nothing","cat":"Conditionals","difficulty":1},
  {"q":"What is indentation level usually?","a":"4 spaces","cat":"Conditionals","difficulty":1},

  {"q":"How do you write a while loop?","a":"<code>while x < 5: print(x)</code>","cat":"Loops","difficulty":2},
  {"q":"What keyword exits loop early?","a":"<code>break</code>","cat":"Loops","difficulty":2},
  {"q":"What keyword skips iteration?","a":"<code>continue</code>","cat":"Loops","difficulty":2},
  {"q":"How do you loop through a list?","a":"<code>for item in list:</code>","cat":"Loops","difficulty":1},
  {"q":"How do you loop with index?","a":"<code>for i,val in enumerate(list):</code>","cat":"Loops","difficulty":2},
  {"q":"What does range(5) generate?","a":"0,1,2,3,4","cat":"Loops","difficulty":1},
  {"q":"How do you loop backwards?","a":"<code>for i in reversed(range(5))</code>","cat":"Loops","difficulty":2},
  {"q":"What is nested loop?","a":"Loop inside a loop","cat":"Loops","difficulty":3},
  {"q":"How do you iterate dict keys?","a":"<code>for key in d</code>","cat":"Loops","difficulty":2},
  {"q":"What does else in loop mean?","a":"Executes if no break","cat":"Loops","difficulty":3},

  {"q":"How do you define a function?","a":"<code>def myfunc():</code>","cat":"Functions","difficulty":2},
  {"q":"How do you return a value?","a":"<code>return</code>","cat":"Functions","difficulty":2},
  {"q":"What is a default parameter?","a":"<code>def f(x=10):</code>","cat":"Functions","difficulty":3},
  {"q":"What are *args?","a":"Variable number of positional args","cat":"Functions","difficulty":3},
  {"q":"What are **kwargs?","a":"Variable number of keyword args","cat":"Functions","difficulty":3},
  {"q":"What is a lambda function?","a":"<code>lambda x:x*2</code>","cat":"Functions","difficulty":3},
  {"q":"What is recursion?","a":"Function calling itself","cat":"Functions","difficulty":3},
  {"q":"Can function return multiple values?","a":"Yes, as tuple","cat":"Functions","difficulty":3},
  {"q":"What is a docstring?","a":"String explaining a function","cat":"Functions","difficulty":2},
  {"q":"How to annotate parameter types?","a":"<code>def f(x:int)->str:</code>","cat":"Functions","difficulty":3},

  {"q":"What error if variable not defined?","a":"NameError","cat":"Errors & OOP","difficulty":2},
  {"q":"What error dividing by zero?","a":"ZeroDivisionError","cat":"Errors & OOP","difficulty":2},
  {"q":"How do you handle errors?","a":"<code>try: ... except: ...</code>","cat":"Errors & OOP","difficulty":3},
  {"q":"What does finally do?","a":"Runs no matter what","cat":"Errors & OOP","difficulty":3},
  {"q":"How to raise error manually?","a":"<code>raise ValueError('msg')</code>","cat":"Errors & OOP","difficulty":3},
  {"q":"How to define a class?","a":"<code>class MyClass:</code>","cat":"Errors & OOP","difficulty":2},
  {"q":"What is __init__ used for?","a":"Constructor method","cat":"Errors & OOP","difficulty":2},
  {"q":"What is inheritance?","a":"Class inherits from another","cat":"Errors & OOP","difficulty":3},
  {"q":"What is polymorphism?","a":"Same method different behavior","cat":"Errors & OOP","difficulty":3},
  {"q":"What are magic methods?","a":"Special methods like __str__","cat":"Errors & OOP","difficulty":3}
]
